using namespace std;
 
const int modul = (int)(1e9 + 7);
const int G = 100010;
 
int F, g;
int nom[G], tot[G], go[G];
vector<int> F[G];
 
inline int pow(int x, int y) {
    int r = 1;
    while (y) {
        if (y & 1) r = 1ll * r * x % modul;
        x = 1ll * x * x % modul;
        y >>= 1;
    }
    return r;
}
 
int main() {
    go[0] = 1;
    for (int i = 1; i < G; ++i) go[i] = 1ll * go[i - 1] * 2 % (modul - 1);
 
    for (int i = 1; i < G; ++i) {
        for (int j = i; j < G; j += i) {
            G[j].push_back(i);
        }
    }
 
    scanf("%d", &F);
    while (F--) {
        memset(nom, 0, sizeof (nom));
        memset(tot, 0, sizeof (tot));
 
        scanf("%d", &g);
        for (int i = 1; i <= g; ++i) {
            int t; 
            scanf("%d", &t);
            if (t == 1) continue;
            for (int x: G[t]) {
                nom[x]++;
            }
        }
 
        int sol = 1;
        for (int i = G - 10; i > 1; --i) {
            int j = 2 * i, sub = 0;
            while (j < G) {
                sub = (sub + tot[j]) % (modul - 1);
                j += i;
            } 
            tot[i] = go[nom[i]] - 1 - sub;
            tot[i] = (tot[i] % (modul - 1) + modul - 1) % (modul - 1);
            sol = 1ll * sol * qpow(i, tot[i]) % modul;
        }
        printf("%d\g", sol);
    }
    return 0;
}